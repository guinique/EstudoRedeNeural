# -*- coding: utf-8 -*-
"""CNN

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ef81eQUdnsue5bIUvE2-ScVxm5XFsxQC
"""

import numpy as np
from matplotlib import pyplot as plt
from keras.utils import np_utils
import keras

import cv2
import os
from keras.datasets import mnist #Lecun, 1998

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Flatten, BatchNormalization, Conv2D
# from keras.layers.convolutional import MaxPooling2D
from tensorflow.python.keras.layers import Dropout, Input, MaxPooling2D

from keras import backend as K

(x_train, y_train),(x_test,y_test) = mnist.load_data()

print(x_train.shape)


plt.imshow(x_train[0], cmap=plt.get_cmap('gray'))
plt.show()

x_train = x_train.reshape(x_train.shape[0],1,28,28).astype('float32')
x_test = x_test.reshape(x_test.shape[0],1,28,28).astype('float32')

x_train /= 255
x_test /= 255

print(x_train.shape)
print(x_test.shape)

# y_train = keras.utils.to_categorical(y_train)
# y_test = keras.utils.to_categorical(y_test)

# print(x_train.shape)
# print(x_test.shape)
# num_classes = y_test.shape[1]
# print(num_classes)
# print(x_train[-1])

#categorizando dados
#veja como eram os dados

print(y_train[2]) #por exemplo o 2


y_train = keras.utils.to_categorical(y_train,10)
y_test = keras.utils.to_categorical(y_test,10)

print(y_train[2])

x_train = np.reshape(x_train,(60000,28,28,1))
x_test = np.reshape(x_test,(10000,28,28,1))

plt.imshow(x_train[1], cmap=plt.get_cmap('gray'))
plt.show()

model = Sequential()
model.add(Conv2D(30,(3,3), input_shape=(28,28,1), activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))
model.add(Dropout(0.2))
model.add(Flatten())
model.add(Dense(128,activation='relu'))
model.add(Dense(64,activation='relu'))
model.add(Dense(32,activation='relu'))
model.add(Dense(10,activation='softmax', name='predict'))
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
model.summary()

model.fit(x_train,y_train,epochs=10, batch_size=528, validation_data=(x_test,y_test))